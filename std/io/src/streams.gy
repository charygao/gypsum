// Copyright 2016, Jay Conrod. All rights reserved.
//
// This file is part of the Gypsum standard library. Use of this
// source code is governed by the 3-clause BSD license that can be
// found in the LICENSE.txt file.

import std.I8Array

public abstract class InputStream
  public abstract def close: unit
  public abstract def is-closed: boolean
  public abstract def read(buffer: I8Array, offset: i32, count: i32): i32


public final class FileInputStream <: InputStream
  private var fd: i32

  public def this(file: File) =
    fd = open-fd(file.to-string)

  public def this(path: String) =
    fd = open-fd(path.to-string)

  public override def close: unit =
    if (is-closed)
      return
    close-fd(fd)
    fd = -1i32
    {}

  public override def is-closed = fd < 0i32

  public override def read(buffer: I8Array, offset: i32, count: i32): i32 =
    if (is-closed)
      throw StreamClosedException()
    read-fd(fd, buffer, offset, count)

  private static native def open-fd(path: String): i32

  private static native def close-fd(fd: i32): unit

  private static native def read-fd(fd: i32, buffer: I8Array, offset: i32, count: i32): i32
